name: Code checks

on: [push]

env:
  POETRY_VERSION: 1.8.2

jobs:
  Tests:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        PYTHON_VERSION: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.PYTHON_VERSION }}

      - name: Set up miniconda and install samtools
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest
          channels: conda-forge,bioconda
          activate-environment: pixy-dev
          auto-activate-base: false
          environment-file: environment.yaml
          channel-priority: flexible
          auto-update-conda: true
          python-version: ${{ matrix.PYTHON_VERSION }}

      - name: Get full Python version
        id: full-python-version
        shell: bash
        run: echo "version=$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")" >> $GITHUB_OUTPUT

      - name: Install poetry
        run: |
          python -m pip install --upgrade pipx
          pipx install poetry==${{env.POETRY_VERSION}}

      - name: Set up cache
        uses: actions/cache@v4
        id: cache
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        shell: bash
        run: poetry run pip --version >/dev/null 2>&1 || rm -rf .venv

      - name: Set compiler flags
        shell: bash
        run: |
          export CFLAGS="-march=native"
          export CXXFLAGS="-march=native"

      - name: Install the library
        shell: bash -el {0}
        run: |
          poetry install -v

      - name: Test the library
        shell: bash -el {0}
        run: |
          poetry run ruff format --check --diff
          poetry run ruff check
          poetry run mypy
          poetry run pytest

[tool.poetry]
name          = "pixy"
version       = "2.0.0-dev"
description   = "An unbiased estimation of average nucleotide diversity within (Ï€) and between (dxy) populations from a VCF"
readme        = "README.md"
authors       = [
    "Kieran Samuk <ksamuk@gmail.com>",
]
license       = "MIT"
include       = ["LICENSE"]
homepage      = "https://github.com/ksamuk/pixy"
repository    = "https://github.com/ksamuk/pixy"
documentation = "https://pixy.readthedocs.io/en/latest/about.html"

[tool.poetry.dependencies]
python       = ">=3.8,<3.12"
multiprocess = "^0.70.16"
numcodecs    = "^0.12.1"
numpy        = "^1.25.0
pandas       = "^1.5.3"
scikit-allel = "^1.3.7"
scipy        = "^1.10.1"

[tool.poetry.group.dev.dependencies]
mypy        = "^1.13.0"
pytest      = "^8.3.3"
pytest-cov  = "^5.0.0"
ruff        = "0.7.4"
ipython     = "^8.0"
ipdb        = "^0.13"

[tool.poetry.scripts]
pixy = "pixy.__main__:main"

[build-system]
requires      = ["poetry-core>=1.6"]
build-backend = "poetry.core.masonry.api"

[tool.poe]
poetry_command = "task"

[tool.poe.tasks]
fix-format = "ruff format"
fix-lint   = "ruff check --fix"

fix-all.ignore_fail = true
fix-all.sequence    = [
    "fix-format",
    "fix-lint"
]

check-lock   = "poetry check --lock"
check-format = "ruff format --check --diff"
check-lint   = "ruff check"
check-tests  = "pytest"
check-typing = "mypy"

check-all.ignore_fail = true
check-all.sequence    = [
    "check-lock",
    "check-format",
    "check-lint",
    "check-tests",
    "check-typing"
]

fix-and-check-all.ignore_fail = true
fix-and-check-all.sequence    = [
    "fix-all",
    "check-all"
]

[tool.mypy]
files                       = ["./"]
mypy_path                   = "./stubs"
strict_optional             = true
strict_equality             = true
check_untyped_defs          = true
disallow_incomplete_defs    = true
disallow_untyped_calls      = true
disallow_untyped_decorators = true
disallow_untyped_defs       = true
no_implicit_optional        = true
warn_no_return              = true
warn_redundant_casts        = true
warn_return_any             = true
warn_unreachable            = true
warn_unused_configs         = true
warn_unused_ignores         = true
enable_error_code           = "ignore-without-code"
exclude                     = [
    "docs/",
    "site/",
]

[[tool.mypy.overrides]]
module = [
    "defopt",
    "multiprocess",
    "setuptools",
    "scipy",
    "allel",
    "pandas",
    "numcodecs",
    "numpy",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.4"
addopts    = [
    "--color=yes",
    "--import-mode=importlib",
    "--cov"
]
markers = [
    "regression: marks SLOW regression tests (deselect with '-m \"not regression\"')",
]

[tool.ruff]
line-length    = 100
target-version = "py38"
output-format  = "full"
preview        = true

[tool.ruff.lint]
select    = [
    "ARG",    # Unused arguments
    "C901",   # McCabe complexity
    "B",      # bugbear
    "D",      # pydocstyle (docstrings. We have the "google" convention enabled)
    "D204",   # Blank line between class docstring and first (__init__) method
    "D213",   # Summary line should be located on the line after opening quotes
    "E",      # pycodestyle errors
    "LOG",    # flake8-logging
    "F",      # pyflakes
    "I",      # isort
    "N",      # PEP8 naming
    "W",      # pycodestyle warnings
    "Q",      # flake8-quotes
]
ignore    = [
    "E203",
    "E701",
    "D212",  # summary line should be located on the same line as opening quotes
    "D100",  # Missing docstring in public module
    "D104",  # Missing docstring in public package
    "D105",  # Missing docstring in magic method
]
unfixable = ["B"]

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.lint.pydocstyle]
convention = "google"
